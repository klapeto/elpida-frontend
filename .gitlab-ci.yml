stages:
  - build
  - test
  - deploy

.build:
  image: node:12.18.1-alpine3.9
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/
  before_script:
    - npm ci --cache .npm --prefer-offline

build:production:
  extends: .build
  script:
    - npm run buildProd
  only:
    - master

build:staging:
  extends: .build
  script:
    - npm run buildStag
  only:
    - staging

.docker-image-build:
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_ENVIRONMENT_NAME" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_ENVIRONMENT_NAME"

docker-image-build:production:
  extends: .docker-image-build
  environment:
    name: production
    url: https://www.elpida.dev
  only:
    - master

docker-image-build:staging:
  extends: .docker-image-build
  environment:
    name: staging
    url: https://staging.elpida.dev
  only:
    - staging

